@using Clicks.Yoga.Domain
@model Clicks.Yoga.Portal.Models.Search.SearchResultModel

        
<article class="result @(Model.FriendshipStatus == FriendshipStatus.BlockedBySelf ? "blocked" : "")">
    <a href="@Model.Uri" class="resultLink">
        @Html.Image(Model.Image, "Profile.jpg", i => i.Resize(c => c.Width(160).Height(160).ScaleBoth().Crop()))
        <strong class="name">@Html.Trim(Model.Name, 35)</strong>
 
            @if (Model.Rating.HasValue)
            {
                <span style="text-align: center;" class="rating @Html.StarRatingClass(Model.Rating.Value)"></span>
            }
    
            <div style="margin:5px 0 0;float:left;width:100%;">
                @if (Model.City == null)
                {
                    if (Model.Description != null && Model.Description.Length > 20)
                    {
                        @Model.Description.Substring(0, 20)
                        <text>...</text>
                    }
                    else
                    {
                        @Model.Description
                    }
                }
                else
                {
                    @Model.City<br />
                    @Model.Country
                }
            </div>

        @if (Model.Type == "Profile")
        {
            <div class="search-res-profile-container">
                @Html.Action("Button", "Friends", new { ProfileId = Model.Id, ProfileName = Model.Name, Status = Model.FriendshipStatus })
            </div>
        }
   </a>
</article>
