@using Clicks.Yoga.Portal.Models.Profiles
@model Clicks.Yoga.Portal.Models.Account.AccountSettingsModel

@{
    ViewBag.Title = "Settings";
    Layout = "~/Views/Layout/Layout.cshtml";
}

@section LeftNav {
    @Html.Action("Navigation", "Profiles", new { Id = Model.ProfileId })
}


<section class="nopadding hidden-sm hidden-md hidden-lg row wisdom-strip-Bottom">
    <div class="col-xs-10 nopadding">
        <header>
            <h2 class="pageTitle">
                <img src='/images/svgicons/icon_findTeal.svg' data-svgpng='/images/SvgIcons/icon_findTeal.png' /><span style='color: #459088; font-weight: normal'>Profile</span>
            </h2>
        </header>
    </div>
    <div class="col-xs-2 nopadding">
        <a href="#" id="right-menu" class="pull-right" title="Filter menu"><span class="glyphicon glyphicon-filter filter-icon nopadding"></span></a>
    </div>
</section>
<div class="profile-strip-line"></div>


<div id="content-slider" class="content-slider">
    <div class="content-col profile-strip" id="scroll">
        <div id="page-content">
            <article id="static">

                <h1 class="greenHeader requestHeader"><img src='/images/svgicons/Icon_VenueTeal.svg' data-svgpng='/images/SvgIcons/Icon_VenueTeal.png'/> Account settings
                </h1>
                <br/><hr style="margin-top: 7px; margin-bottom: 7px;"/>

                @Html.ValidationSummary()

                @using (Html.BeginForm("Settings", "Account"))
                {
                    @Html.HiddenFor(m => m.ProfileId)

                    <h3>Fill in the information below to change your account details</h3>


                    <div class="block-section twoColBlockSection">

                        @Html.HiddenFor(m => m.UserHasConnectedFacebook)

                        @if (Model.UserHasConnectedFacebook)
                        {
                            <div class="col">
                                <div>
                                    Your account is connected to Facebook.
                                    <br/>
                                    To disconnect your Facebook account, set a password.
                                    <br/>
                                    Save and you will be able to login using your email address and password.
                                </div>
                            </div>
                            <div class="col">
                                @Html.HiddenFor(m => m.CurrentEmailAddress)

                                <div>
                                    <label for="CurrentEmailAddress">Email address:</label>
                                    @Html.TextBoxFor(m => m.CurrentEmailAddress, new {disabled = true})
                                </div>

                                <div>
                                    <label for="NewPassword">New password:</label>
                                    @Html.PasswordFor(m => m.NewPassword)
                                </div>

                                <div>
                                    <label for="NewPasswordConfirmation">Confirm new password:</label>
                                    @Html.PasswordFor(m => m.NewPasswordConfirmation)
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="col">
                                <div>
                                    <label for="CurrentPassword">Old password:</label>
                                    @Html.PasswordFor(m => m.CurrentPassword)
                                </div>

                                <div>
                                    <label for="NewPassword">New password:</label>
                                    @Html.PasswordFor(m => m.NewPassword)
                                </div>

                                <div>
                                    <label for="NewPasswordConfirmation">Confirm new password:</label>
                                    @Html.PasswordFor(m => m.NewPasswordConfirmation)
                                </div>
                            </div>
                            <div class="col">
                                @Html.HiddenFor(m => m.CurrentEmailAddress)

                                <div>
                                    <label for="CurrentEmailAddress">Current email address:</label>
                                    @Html.TextBoxFor(m => m.CurrentEmailAddress, new {disabled = true})
                                </div>

                                <div>
                                    <label for="NewEmailAddress">New email address:</label>
                                    @Html.TextBoxFor(m => m.NewEmailAddress)
                                </div>

                                <div>
                                    <label for="NewEmailAddressConfirmation">Confirm new email address:</label>
                                    @Html.TextBoxFor(m => m.NewEmailAddressConfirmation)
                                </div>
                            </div>
                        }
                        <div class="row">
                            <button type="submit" class="saveBtn button">Save changes <span>&nbsp;</span></button>
                        </div>
                    </div>

                    <h3>Marketing</h3>

                    <div class="block-section">
                        @Html.CheckBoxFor(m => m.ThirdPartyOptOut)
                        I do not agree to being contacted by selected third parties about products, services,
                        promotions and special offers which may be of interest to me.
                    </div>




                    if (!SecurityContext.CurrentProfile.Professional)
                    {
                        <h3>Privacy</h3>

                        <div class="block-section">
                            My profile @Html.DropDownListFor(m => m.ProfilePublic, Model.ProfilePublicOptions) visible in public searches
                        </div>
                    }

                    <div class="block-section">
                        My posts @Html.DropDownListFor(m => m.SharingPermitted, Model.SharingPermittedOptions) be shared by others
                    </div>

                    <h3>Email notifications</h3>

                    <div class="block-section">
                        I would like a summary of my notifications

                        @Html.DropDownListFor(m => m.NotificationDigestTimescale, Model.NotificationDigestTimescaleOptions)

                        @foreach (var category in Model.NotificationCategories.Options)
                        {
                            <div>
                                @Html.CheckBoxFor(m => m.NotificationCategories.Selection[category.Id]) @category.Name
                            </div>
                        }
                    </div>


                    <button type="submit" class="saveBtn button pull-right">Save changes <span>&nbsp;</span></button>

                    <a href="@Url.Action("Deactivate")" class="button pull-left" style="color: black">Delete my account</a>


                    <br/><br/><br/>
                }

    
                <div class="block-section newsletter-section">
                    @Html.Partial("UpdateProfileNewsletterOpt",
                            new ProfilePersonalNewsletterOptUpdateModel
                            {
                                NewsletterOptOut = Model.NewsletterOptOut,
                                ProfileId = Model.ProfileId
                            })
                </div>
            </article>
        </div>
    </div>
</div>

<script>
    $('#NewsletterOptOut').change(function () {

        $form = $('#update-profile-newsletter-opt-form');

        $.ajax({
            type: 'POST',
            url: '@Url.Action("UpdateProfileNewsletterOpt","profiles")',
            async: true,
            data: $form.serialize(),
            success: function (html) {
                $('.profile-newsletter-opt-saved-text').fadeIn(500);
                setTimeout(function () {
                    $('.profile-newsletter-opt-saved-text').fadeOut(500);
                }, 2000);
            }
        });

    });

</script>