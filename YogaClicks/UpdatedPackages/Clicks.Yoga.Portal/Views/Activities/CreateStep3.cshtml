@using Clicks.Yoga.Portal.Models.Activities
@model Clicks.Yoga.Portal.Models.Activities.ActivityCreateStep3Model

@{
    Layout = "~/Views/Layout/Modal.cshtml";
}


@using (Html.BeginForm("CreateStep3", "Activities"))
{
    // @Html.Serialize("CreateModel", ViewBag.CreateModel as ActivityCreateModel)
    @Html.Hidden("CreateModel2", new MvcSerializer().Serialize((ActivityCreateModel)ViewBag.CreateModel2, SerializationMode.Signed))
    <h2 class="greenHeader">Create a new event: @ViewBag.ActivityTypeName</h2>
    <hr />
        <ul class="steps steps4">
            <li><span>Step 1</span></li>
            <li><span>Step 2</span></li>
            <li class="active"><span>Step 3</span></li>
            <li><span>Step 4</span></li>
        </ul>
    <div class="scrollableiFrame">
        <h3 class="cb blackSubHeader">Add teachers to the activity <small>(skip this step if not required)</small></h3>

        @Html.EditorFor(m => m.Teachers, "TeacherChooserModel")
        <br/><br/>
        The teacher names won't appear live on site until they've confirmed that they're teaching the class/event.
    </div>

    <div class="wizard-footer-buttons-container">
        <a href="javascript:parent.$.fancybox.close();" class="textLink fl">Cancel</a>
        <div class="wizard-footer-nav-container">
            <a href="#" id="BackButton" class="button pink large backBtn">Back</a>
            <input class="button pink large" type="submit" value="Next" />
        </div>
    </div>
    <div class="cb"></div>
   
    @Html.HiddenFor(m => m.Back)
}

<script type="text/javascript">
    $(document).ready(function () {
        $("#BackButton").click(function (e) {
            e.preventDefault();
            $("#@Html.IdFor(m => m.Back)").val('@bool.TrueString');
            $(this).closest("form").submit();
        });
    });
</script>