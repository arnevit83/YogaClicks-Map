@model Clicks.Yoga.Portal.Models.Venues.VenuePlacementsModel

@{
    ViewBag.Title = "Teachers";
    Layout = "~/Views/Layout/Layout.cshtml";
}

@section Scripts
{
    <script type="text/javascript">
        $(document).ready(function () {
            $(document).on("click", ".remove-placement", function (e) {
                e.preventDefault();

                if (!window.confirm("Are you sure you wish to disassociate this teacher from your venue?"))
                    return;

                var teacherId = $(this).data("teacherid");
                var venueId = $(this).data("venueid");
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("RemovePlacement", "Venues")",
                    data: {
                        teacherId: teacherId,
                        venueId: venueId
                    },
                    dataType: "json",
                    success: function (data) {
                        if (data) {
                            var placement = $(".connection[data-teacherid='" + teacherId + "']");
                            if ($(placement).length) {
                                $(placement).remove();
                                if ($("#placements > .connection").size() == 0 && $("#no-placements").length) {
                                    $("#no-placements").show();
                                }
                            }
                        }
                    }
                });

            });

        });
    </script>
}

@section LeftNav {
    @if (SecurityContext.IsOwner(Model.Venue))
    {
        @Html.Action("Navigation", "Profiles", new { SecurityContext.CurrentProfile.Id })
    }
    else
    {
        @Html.Action("VenuesNavigation", "Search", new { Action = "Venues" })
    }
}

@section Head {
    <meta property="og:title" content="@Model.Venue.Name" />
    <meta property="og:description" content="@Model.Venue.Description" />

    @if (Model.Venue.Image != null)
    {
        <meta property="og:image" content="@Html.ImageUrl(Model.Venue.Image)" />
    }
}

@Html.Partial("ActivateProfileLinkPartial", new Clicks.Yoga.Portal.Models.Shared.ActivateProfileLinkPartialModel(Model.Venue.Id, Model.Venue.EntityTypeName))

<div id="content-slider" class="content-slider">
    <div class="profile-strip content-col @(SecurityContext.IsOwner(Model.Venue) ? " " : "purple-strip")" id="scroll">
        <div id="page-content">
            <article id="static">

                @Html.Action("SubjectRequestsPartial", "Notifications", new { SubjectId = Model.Venue.Id, SubjectTypeName = Model.Venue.EntityTypeName })
                @Html.Action("SummaryPartial", "Reviews", new { SubjectId = Model.Venue.Id, SubjectType = Model.Venue.EntityTypeName })

                <h1 class="venueHeader pageTitle"><span>&nbsp;</span>@Model.Venue.Name</h1>

                <div class="profileBanner venueBanner">

                    @Html.DisplayFor(m => m.Venue.ProfileBanner, "ProfileBanner")

                </div>

                @Html.Partial("Tabs")
                <div style="overflow:hidden;">
                    <h3 class="fl">Teachers</h3>
                    @if (SecurityContext.CanUpdate(Model.Venue))
                    {
                        <a href="javascript:openModal('@Url.Action("CreatePlacement")')" class="button silver fr">Find/add teacher +</a>
                    }
                </div>
                <div class="block-section associatedProfilesWrap">
                    @foreach (var placement in Model.TeacherPlacements)
                    {
                        @Html.Partial("PlacementPartial", placement)
                    }
                </div>
                <div id="no-placements" style="display: @(Model.TeacherPlacements.Count > 0 ? "none" : "")">
                    <p>This venue doesn't have any teachers associated with it yet.</p>
                </div>
                <div class="meta">
                    <p>YogaClicks does not warrant that any of the teachers, venues or teacher training organisations found on our site will meet your health or medical requirements.<p>
                    <p>YogaClicks is not responsible for verifying the accreditation/registration information provided. Please check with the relevant accrediting/registering body for current status.</p>
                    <p>These listings are for information only - any reference to a third party and/or its services does not indicate our endorsement, recommendation or approval, nor does it indicate any third party's endorsement, recommendation or approval of YogaClicks.</p>
                    <br />
                </div>
            </article>
        </div>
    </div>
</div>
