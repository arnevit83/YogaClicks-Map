@using Clicks.Yoga.Portal.Models.Activities
@model Clicks.Yoga.Portal.Models.Activities.ActivityCreateClassStep2Model

@{
    Layout = "~/Views/Layout/Modal.cshtml";
}

@using (Html.BeginForm("CreateClassStep2", "Activities"))
{
    @Html.Serialize("CreateModel", ViewBag.CreateModel as ActivityCreateClassModel)

    <h2 class="greenHeader">Create a new event: Class</h2>
    <hr class="modalHrSteps" />
    <ul class="steps steps5">
        <li><span>Step 1</span></li>
        <li class="active"><span>Step 2</span></li>
        <li><span>Step 3</span></li>
        <li><span>Step 4</span></li>
        <li><span>Step 5</span></li>
    </ul>
    <div class="scrollableiFrame">
        @Html.ValidationSummary()
        <div class="row">
            <div class="halfWidth">
                @Html.LabelFor(m => m.Name, "Class name")
                @Html.TextBoxFor(m => m.Name, new { maxlength = 50 })
            </div>
            <div class="halfWidth">
                <div class="levelWrap">
                    @Html.LabelFor(m => m.AbilityLevel, "Level")
                    <span class="questionMark">?</span>
                </div>
                @Html.EditorFor(m => m.AbilityLevel)
            </div>
        </div>

        <div class="row">
            <div class="halfWidth">
                @Html.LabelFor(m => m.Date, "Date of first class")
                @Html.EditorFor(m => m.Date)
            </div>
            <div class="halfWidth">
                <div class="halfWidth">
                    @Html.LabelFor(m => m.TimeRange, "Start Time")
                    @Html.DropDownListFor(m => m.TimeRange.StartHour, new SelectList(Model.TimeRange.HourOptions, "Value", "Text", Model.TimeRange.StartHour))
                    @Html.DropDownListFor(m => m.TimeRange.StartMinute, new SelectList(Model.TimeRange.MinuteOptions, "Value", "Text", Model.TimeRange.StartMinute))
                </div>
                <div class="halfWidth">
                    @Html.LabelFor(m => m.TimeRange, "End Time")
                    @Html.DropDownListFor(m => m.TimeRange.FinishHour, new SelectList(Model.TimeRange.HourOptions, "Value", "Text", Model.TimeRange.FinishHour))
                    @Html.DropDownListFor(m => m.TimeRange.FinishMinute, new SelectList(Model.TimeRange.MinuteOptions, "Value", "Text", Model.TimeRange.FinishMinute))
                </div>
            </div>
        </div>

        <div class="row">
            @Html.LabelFor(m => m.Repeat)
            @Html.EditorFor(m => m.Repeat, "BooleanRadios")
        </div>

        <div class="row repeat-frequency">
            @Html.LabelFor(m => m.RepeatFrequency, "Frequency")
            @Html.EditorFor(m => m.RepeatFrequency)
        </div>
        <div class="repeat-days-container">
            <div class="select-repeat-days-title">Select days this will repeat on</div>
            <div class="repeat-day">
                @Html.LabelFor(x => x.RepeatMonday, "Monday")
                @Html.CheckBoxFor(x => x.RepeatMonday)
            </div>
            <div class="repeat-day">
                @Html.LabelFor(x => x.RepeatMonday, "Tuesday")
                @Html.CheckBoxFor(x => x.RepeatTuesday)
            </div>
            <div class="repeat-day">
                @Html.LabelFor(x => x.RepeatMonday, "Wednesday")
                @Html.CheckBoxFor(x => x.RepeatWednesday)
            </div>
            <div class="repeat-day">
                @Html.LabelFor(x => x.RepeatMonday, "Thursday")
                @Html.CheckBoxFor(x => x.RepeatThursday)
            </div>
            <div class="repeat-day">
                @Html.LabelFor(x => x.RepeatMonday, "Friday")
                @Html.CheckBoxFor(x => x.RepeatFriday)
            </div>
            <div class="repeat-day">
                @Html.LabelFor(x => x.RepeatMonday, "Saturday")
                @Html.CheckBoxFor(x => x.RepeatSaturday)
            </div>
            <div class="repeat-day">
                @Html.LabelFor(x => x.RepeatMonday, "Sunday")
                @Html.CheckBoxFor(x => x.RepeatSunday)
            </div>
        </div>
        <div class="levelBox">
            <strong>Everyone has their own definition but here's a rough guide:</strong>
            <ul>
                <li><strong>Beginners</strong> - Introduces the basics</li>
                <li><strong>Level 1</strong> - Builds familiarity</li>
                <li><strong>Level 2</strong> - Intermediate, develops understanding</li>
                <li><strong>Level 3</strong> - Advanced, develops mastery</li>
                <li><strong>Open</strong> - All levels, usually taught with modifications</li>
            </ul>
            <a href="#" class="close">x</a>
        </div>
    </div>

    <div class="wizard-footer-buttons-container">
        <a href="javascript:parent.$.fancybox.close();" class="textLink fl">Cancel</a>
        <div class="wizard-footer-nav-container">
            <a href="#" id="BackButton" class="button pink large backBtn">Back</a>
            <input class="button pink large" type="submit" value="Next" />
        </div>
    </div>
    <div class="cb"></div>

    @Html.HiddenFor(m => m.Back)
}

<script type="text/javascript">
    $('document').ready(function () {
        $("#BackButton").click(function (e) {
            e.preventDefault();
            $("#@Html.IdFor(m => m.Back)").val('@bool.TrueString');
            $(this).closest("form").submit();
        });
        $('.questionMark').click(function () {
            $('.activity-meta').toggleClass('padding-bottom');
            $('.levelBox').slideToggle();
        });
        $('.close').click(function () {
            $('.levelBox').slideUp();
            $('.activity-meta').removeClass('padding-bottom');
        });
    });

</script>

