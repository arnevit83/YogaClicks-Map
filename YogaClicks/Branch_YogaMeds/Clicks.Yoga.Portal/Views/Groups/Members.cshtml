@using Clicks.Yoga.Portal.Models.Groups
@model Clicks.Yoga.Portal.Models.Groups.GroupMembersModel

@{
    ViewBag.Title = "Members";
    Layout = "~/Views/Layout/Layout.cshtml";
}

@{
    var guid = Guid.NewGuid().ToString();
}

@section LeftNav {
    @if (SecurityContext.IsOwner(Model.Group))
    {
        @Html.Action("Navigation", "Profiles", new { SecurityContext.CurrentProfile.Id })
    }
    else
    {
        @Html.Action("Navigation", "Community")
    }
}

@section Head {
    <meta property="og:title" content="@Model.Group.Name" />
    @if (!string.IsNullOrEmpty(Model.Group.Description))
    {
        <meta property="og:description" content="@Model.Group.Description" />
    }
    @if (Model.Group.ProfileBanner != null)
    {
        <meta property="og:image" content="@Model.Group.ProfileBanner.Url" />
    }
}
@Html.Partial("ActivateProfileLinkPartial", new Clicks.Yoga.Portal.Models.Shared.ActivateProfileLinkPartialModel(Model.Group.Id, Model.Group.EntityTypeName))

<div id="content-slider" class="content-slider">
    <div class="profile-strip content-col @(SecurityContext.IsOwner(Model.Group) ? "" : "community-strip")" id="scroll">
        <div id="page-content">
            <article id="static">
                <h2 class="greenHeader communityHeader"><span>&nbsp;</span>@Model.Group.Name</h2>
                <hr />
                <div class="shareRecommendSection">
                    <div class="fr">
                        <span>Share: </span>
                        @Html.Action("EntityButtons", "Sharing", new { EntityId = Model.Group.Id, Model.Group.EntityTypeName })
                    </div>
                </div>

                <div class="profileBanner groupBanner">
                    @Html.DisplayFor(m => m.Group.ProfileBanner, "ProfileBanner")
                </div>

                @Html.Partial("Tabs", new GroupTabsModel(Model.Permissions, Model.Group))

                <div id="@guid">
                    <div class="block-section reducedBottomPadding">
                        <div class="fl">
                            <h3 class="noMargins">Group members <span class="member-count"></span></h3>
                        </div>
                        <div class="fr">
                            @if (Model.Permissions.Manage)
                            {
                                <button data-role="RemoveSelectedButton" class="silver button">Delete selected</button>
                            }

                            @if (Model.Permissions.ManageAdministrators)
                            {
                                <button data-role="PromoteSelectedButton" class="silver button">Make admin</button>
                            }

                            @if (Model.Permissions.Invite)
                            {
                                <button data-role="InviteButton" class="silver button">Invite friends</button>

                            }
                        </div>

                    </div>
                    <output data-role="InviteChooser"></output>
                    <div class="attendingWrap" data-permissions="@Model.Permissions" data-group="@Model.Group">
                        @Html.Action("MembersPartial", "Groups",
                        new
                        {
                            id = Model.Group.Id,
                            groupOwnerId = Model.Group.OwnerId,
                            permissionsManage = Model.Permissions.Manage,
                            permissionsmanageAdmin = Model.Permissions.ManageAdministrators
                        })
                    </div>
                    <div class="no-more-members" style="display:none;"></div>
                    <div class="loading-bar"><img src="@Url.Content("~/Images/loading_bar.gif")" /></div>
                </div>
            </article>
        </div>
    </div>
</div>

<script>
    $(function () {
        var $container = $('#@guid');
        var $inputs = $container.find('input');

        $container.on('click', '[data-role=RemoveSelectedButton]', function (e) {
            e.preventDefault();

            if (!window.confirm("Are you sure you wish to delete the selected members from this group?"))
                return;

            $.ajax({
                type: 'POST',
                url: '@Url.Action("RemoveMembers")',
                data: $inputs.serialize(),
                success: function () {
                    window.top.location.reload();
                }
            });
        });

        $container.on('click', '[data-role=PromoteSelectedButton]', function (e) {
            e.preventDefault();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("PromoteMembers")',
                data: $inputs.serialize(),
                success: function () {
                    window.top.location.reload();
                }
            });
        });

        $container.on('click', '[data-role=DemoteButton]', function (e) {
            e.preventDefault();

            var id = $(this).attr('data-id');

            $.ajax({
                type: 'POST',
                url: '@Url.Action("DemoteMembers")',
                data: { UserIds: id },
                success: function () {
                    window.top.location.reload();
                }
            });
        });

        $container.find('[data-role=InviteButton]').on('click', function (e) {
            e.preventDefault();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("InvitePartial")',
                success: function (html) {
                    $container.find('output[data-role=InviteChooser]').html(html);
                }
            });
        });
    });
</script>

@section Scripts{
    <script>
        $('div#scroll').scroll(function () {
            if ($('.no-more-members:hidden').length > 0) {
                if (element_in_scroll(".member:last")) {
                    if ($('.loading-bar:hidden').length > 0) {
                        $('.loading-bar').show();
                        var linkToParse = '/groups/MembersPartial?skip=555';
                        var link = linkToParse.replace("555", $('.member').length);
                        var data = {
                            id: @Model.Group.Id,
                            groupOwnerId: @Model.Group.OwnerId,
                            permissionsManage: Boolean('@Model.Permissions.Manage'),
                            permissionsmanageAdmin: Boolean('@Model.Permissions.ManageAdministrators')};
                        $.ajax({
                            url: link,
                            data: data,
                            async: true,
                            success: function (html) {
                                if (html.length > 10) {
                                    $(".attendingWrap").append(html);
                                } else {
                                    $('.no-more-members').show();
                                }
                                $('.loading-bar').hide();
                            }
                        });
                    };
                };
            };
        });

        function element_in_scroll(elem) {
            var docViewTop = $(window).scrollTop();
            var docViewBottom = docViewTop + $(window).height();

            var elemTop = $(elem).offset().top;
            var elemBottom = elemTop + $(elem).height();

            return ((elemTop <= docViewBottom));
        }

        $(document).ready(function() {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetMemberCount")',
                async:true,
                data: { groupId: '@Model.Group.Id' },
                success: function (response) {
                    $('.member-count').html('(' + response + ')');
                }
            });
        });
    </script>
}
